// Generated by CoffeeScript 2.5.1
(function() {
  require('ingy-prelude');

  global.name_ = function(name, func, trace) {
    if (trace != null) {
      func.trace = trace;
    }
    return func;
  };

  global.stringify = function(c) {
    if (c === "\ufeff") {
      return "\\uFEFF";
    }
    if (isFunction(c)) {
      return `@${c.name}`;
    }
    if (isObject(c)) {
      return JSON.stringify(_.keys(c));
    }
    return JSON.stringify(c).replace(/^"(.*)"$/, '$1');
  };

  global.isNull = _.isNull;

  global.isBoolean = _.isBoolean;

  global.isNumber = _.isNumber;

  global.isString = _.isString;

  global.isFunction = _.isFunction;

  global.isArray = _.isArray;

  global.isObject = _.isObject;

  global.typeof_ = function(value) {
    if (_.isNull(value)) {
      return 'null';
    }
    if (_.isBoolean(value)) {
      return 'boolean';
    }
    if (_.isNumber(value)) {
      return 'number';
    }
    if (_.isString(value)) {
      return 'string';
    }
    if (_.isFunction(value)) {
      return 'function';
    }
    if (_.isArray(value)) {
      return 'array';
    }
    if (_.isObject(value)) {
      return 'object';
    }
    return xxx([value, typeof value]);
  };

  global.die_ = function(msg) {
    return die((new Error().stack) + "\n" + msg);
  };

  global.debug = function(msg) {
    return warn(`>>> ${msg}`);
  };

  global.debug1 = function(name, ...args) {
    if (!process.env.DEBUG) {
      return;
    }
    args = _.join(_.map(args, function(a) {
      return stringify(a);
    }, ','));
    return debug(`${name}(${args})`);
  };

  global.dump = function(o) {
    return require('yaml').stringify(o);
  };

  global.xxxxx = function(...o) {
    WWW(o);
    return die('xxxxx');
  };

  global.timer = function(start = null) {
    var time;
    if (start != null) {
      time = process.hrtime(start);
      return time[0] + time[1] / 1000000000;
    } else {
      return process.hrtime();
    }
  };

  // vim: sw=2:

}).call(this);
